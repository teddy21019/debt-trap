op = optim(c(1,2), fn = lh, method = "BFGS")
op
library(MASS)
library(data.table)
library(dplyr)
library(xtable)
setwd("~/111-1/Labor Economic/HW2/src")
## Parameters settings
N = 1e7
mu0 = 10
mu1 = 15
sigma0 = 3
sigma1 = 4.5
sigma_01 = 2
sigma_matrix = matrix(c(sigma0^2, sigma_01,
sigma_01, sigma1^2),
ncol=2)
C = 3
wage = data.table(
mvrnorm(n=N,mu=c(0, 0),Sigma=sigma_matrix)
)
View(wage)
## Rename
setnames(wage, "V1", "e0")
setnames(wage, "V2", "e1")
## Creating variables
wage[, W0 := e0 + mu0]
wage[, W1 := e1 + mu1]
wage[, Nu := e1 - e0]
wage[, I  := W1 > W0 + C]
View(wage)
install.packages("Matrix")
diag(1)
diag(1,2,2)
sigma_matrix = bdiag(sigma_matrix, diag(1,2,2))
library(Matrix)
sigma_matrix = bdiag(sigma_matrix, diag(1,2,2))
View(sigma_matrix)
sigma_matrix
## Creating error terms, saving to data.table
wage = data.table(
mvrnorm(n=N,mu=c(0, 0, mux1, mux2 ),Sigma=sigma_matrix)
)
beta_1 = 0.5
beta_2 = -1
mux1 = 3
mux2 = 6
wage = data.table(
mvrnorm(n=N,mu=c(0, 0, mux1, mux2 ),Sigma=sigma_matrix)
)
View(wage)
View(wage)
## Rename
setnames(wage, "V1", "e0")
setnames(wage, "V2", "e1")
setnames(wage, "V3", "x1")
setnames(wage, "V4", "x2")
View(wage)
View(wage)
## Creating variables
wage[, W0 := e0 + x1* beta1 + mu0]
wage[, W1 := e1 + x1* beta1 + x2* beta2 + mu1]
wage[, Nu := e1 - e0]
wage[, I  := W1 > W0 + C]
## Parameters settings
N = 1e7
mu0 = 10
mu1 = 15
sigma0 = 3
sigma1 = 4.5
sigma_01 = 2
sigma_matrix = matrix(c(sigma0^2, sigma_01,
sigma_01, sigma1^2),
ncol=2)
C = 3
## ===== New Parameter
beta1 = 0.5
beta2 = -1
mux1 = 3
mux2 = 6
sigma_matrix = bdiag(sigma_matrix, diag(1,2,2))
## Creating error terms, saving to data.table
wage = data.table(
mvrnorm(n=N,mu=c(0, 0, mux1, mux2 ),Sigma=sigma_matrix)
)
## Rename
setnames(wage, "V1", "e0")
setnames(wage, "V2", "e1")
setnames(wage, "V3", "x1")
setnames(wage, "V4", "x2")
## Creating variables
wage[, W0 := e0 + x1* beta1 + mu0]
wage[, W1 := e1 + x1* beta1 + x2* beta2 + mu1]
wage[, Nu := e1 - e0]
wage[, I  := W1 > W0 + C]
View(wage)
View(wage)
View(wage)
sq = function(x){x^2}
wage[, T := sq(W0)]
View(wage)
View(wage)
View(wage)
wage[, TT := sq(W0)]
View(wage)
View(wage)
sq = function(x){dnorm(x)}
wage[, TT := sq(W0)]
View(wage)
wage[, TT := dnorm(Nu)]
View(wage)
dnorm(1.16)
library(MASS)
library(data.table)
library(dplyr)
library(xtable)
library(Matrix)
setwd("~/111-1/Labor Economic/HW2/src")
## Parameters settings
N = 1e7
mu0 = 10
mu1 = 15
sigma0 = 3
sigma1 = 4.5
sigma_01 = 2
sigma_matrix = matrix(c(sigma0^2, sigma_01,
sigma_01, sigma1^2),
ncol=2)
C = 3
## ===== New Parameter
beta1 = 0.5
beta2 = -1
mux1 = 3
mux2 = 6
sigma_matrix = bdiag(sigma_matrix, diag(1,2,2))
## Creating error terms, saving to data.table
wage = data.table(
mvrnorm(n=N,mu=c(0, 0, mux1, mux2 ),Sigma=sigma_matrix)
)
## Rename
setnames(wage, "V1", "e0")
setnames(wage, "V2", "e1")
setnames(wage, "V3", "x1")
setnames(wage, "V4", "x2")
## Creating variables
wage[, W0 := e0 + x1* beta1 + mu0]
wage[, W1 := e1 + x1* beta1 + x2* beta2 + mu1]
wage[, Nu := e1 - e0]
wage[, I  := W1 > W0 + C]
## Calculate the theoretical value
## Calculate rho_nu
rho = sigma_01/(sigma0 * sigma1)
sigma_nu = sqrt( sigma0^2 + sigma1^2 - 2 * sigma_01 )
wage[, p_score_theor := dnorm((mu1 - mu0 + beta2 * x2 - C)/sigma_nu) ]
View(wage)
View(wage)
wage[p_score_theor, , max]
wage[p_score_theor, , mean]
wage$p_score_theor
max(wage$p_score_theor)
ps_result = wage[,glm(I~x1+x2, family = binomial(link = "probit")),]
View(ps_result)
coeftest(ps_result)
ps_result
predict(ps_result)
predict(ps_result,type = "response")
ps_result = wage[,p_score_est := predict(
glm(I~x1+x2, family = binomial(link = "probit"))
, type = "response"),]
View(wage)
cor_p_score = wage[,cor(p_score_theor, p_score_est),]
wage[,p_score_est := predict(
glm(I~x1+x2, family = binomial(link = "logit"))
, type = "response"),]
cor_p_score = wage[,cor(p_score_theor, p_score_est),]
View(wage)
wage[, W  := W1 * I + W0 * (1-I)]
View(wage)
wage[, IPW_theor := W/p_score_theor]
wage[, IPW_est := W/p_score_est]
View(head(wage))
lm_theor = wage[, lm(IPW_theorn~I)]
lm_est = wage[, lm(IPW_est~I)]
lm_theor = wage[, lm(IPW_theor~I)]
lm_est = wage[, lm(IPW_est~I)]
lm_est
lm_theor
lm_theor
lm_est
wage[, mean(w1) - mean(w0)]
wage[, mean(W1) - mean(W0)]
summary(lm_theor)
summary(lm_est)
wage[, mean(W1-W0)]
wage[, IPW_theor := W/p_score_theor * I + W/(1-p_score_theor)* (1-I)]
wage[, IPW_est :=  W/p_score_est * I + W/(1-p_score_est)* (1-I)]
lm_theor = wage[, lm(IPW_theor~I)]
lm_est = wage[, lm(IPW_est~I)]
summary(lm_theor)
summary(lm_est)
mux2 * beta2 + mu1 - mu0
wage[D == 1, ]
wage[D = 1, ]
wage[D == Truw, ]
wage[D == True, ]
wage[D == T, ]
## Parameters settings
N = 1e7
mu0 = 10
mu1 = 15
sigma0 = 3
sigma1 = 4.5
sigma_01 = 2
sigma_matrix = matrix(c(sigma0^2, sigma_01,
sigma_01, sigma1^2),
ncol=2)
C = 3
## ===== New Parameter
beta1 = 0.5
beta2 = -1
mux1 = 3
mux2 = 6
sigma_matrix = bdiag(sigma_matrix, diag(1,2,2))
## Creating error terms, saving to data.table
wage = data.table(
mvrnorm(n=N,mu=c(0, 0, mux1, mux2 ),Sigma=sigma_matrix)
)
## Rename
setnames(wage, "V1", "e0")
setnames(wage, "V2", "e1")
setnames(wage, "V3", "x1")
setnames(wage, "V4", "x2")
## Creating variables
wage[, W0 := e0 + x1* beta1 + mu0]
wage[, W1 := e1 + x1* beta1 + x2* beta2 + mu1]
wage[, Nu := e1 - e0]
wage[, D  := W1 > W0 + C]
wage[, W  := W1 * D + W0 * (1-D)]
## Calculate the theoretical value
## Calculate rho_nu
rho = sigma_01/(sigma0 * sigma1)
sigma_nu = sqrt( sigma0^2 + sigma1^2 - 2 * sigma_01 )
wage[, p_score_theor := dnorm((mu1 - mu0 + beta2 * x2 - C)/sigma_nu) ]
## Estimate logit to get propensity score
wage[,p_score_est := predict(
glm(D~x1+x2, family = binomial(link = "logit"))
, type = "response"),]
cor_p_score = wage[,cor(p_score_theor, p_score_est),]
wage[, DPW_theor := W/p_score_theor * D + W/(1-p_score_theor)* (1-D)]
wage[, DPW_est :=  W/p_score_est * D + W/(1-p_score_est)* (1-D)]
View(head(wage))
lm_theor = wage[, lm(DPW_theor~D)]
lm_est = wage[, lm(DPW_est~D)]
summary(lm_theor)
summary(lm_est)
wage[, DPW_theor := W/ifelse(D, p_score_theor, 1-p_score_theor)]
wage[, DPW_est :=  W/ifelse(D, p_score_est, 1-p_score_est)]
View(head(wage))
wage[,cor(DPW_theor, DPW_est)]
wage[,mean(W * D/p_score_est)-mean(W * (1-D)/(1-p_score_est))]
wage[,mean(W * D/p_score_est)]
wage[,mean(W1)]
wage[,mmean(W * (1-D)/(1-p_score_est))]
wage[,mean(W * (1-D)/(1-p_score_est))]
wage[,mean(W0)]
install.packages("RSiena")
install.packages("RSiena")
library(RSiena)
?includeEffects
?siena07
effectsDocumentation(
)
library(readr)
library(tidyverse)
AGRICULTURE_GDP <- read_csv("Desktop/論文3/DATA/AGRICULTURE.FORESTRY.FISHING.GDP.csv")
View(AGRICULTURE_FORESTRY_FISHING_GDP)
View(AGRICULTURE_GDP)
library(readr)
library(tidyverse)
AGRICULTURE_GDP <- read_csv("Desktop/論文3/DATA/AGRICULTURE.FORESTRY.FISHING.GDP.csv")
MANUFACTURING_GDP <- read_csv("Desktop/論文3/DATA/MANUFACTURING.GDP.csv")
View(MANUFACTURING_GDP)
View(MANUFACTURING_GDP)
View(AGRICULTURE_GDP)
View(AGRICULTURE_GDP)
AGRICULTURE_GDP_TARGET = AGRICULTURE_GDP %>% filter(`Country Code`=='LKA' | 'PAK')
AGRICULTURE_GDP_TARGET = AGRICULTURE_GDP %>% filter(`Country Code`=='LKA' | `Country Code`=='PAK')
View(AGRICULTURE_GDP_TARGET)
View(AGRICULTURE_GDP_TARGET)
setwd("/Users/abc/Desktop/論文3/Thesis/fig")
library(readr)
zarazaga_plot_data <- read_csv("Desktop/論文3/DATA/Zarazaga/zarazaga_plot_data.csv")
View(zarazaga_plot_data)
setwd("/Users/abc/Desktop/論文3/Thesis/fig")
library(readr)
zarazaga_plot_data <- read_csv("/Desktop/論文3/DATA/Zarazaga/zarazaga_plot_data.csv")
View(zarazaga_plot_data)
zarazaga_plot_data <- read_csv~("~/Desktop/論文3/DATA/Zarazaga/zarazaga_plot_data.csv")
setwd("/Users/abc/Desktop/論文3/Thesis/fig")
library(readr)
zarazaga_plot_data <- read_csv~("~/Desktop/論文3/DATA/Zarazaga/zarazaga_plot_data.csv")
View(zarazaga_plot_data)
setwd("/Users/abc/Desktop/論文3/Thesis/fig")
library(readr)
zarazaga_plot_data <- read_csv("~/Desktop/論文3/DATA/Zarazaga/zarazaga_plot_data.csv")
View(zarazaga_plot_data)
library(tidyverse)
setwd("/Users/abc/Desktop/論文3/Thesis/fig")
zarazaga_plot_data %>% ggplot() +
geom_line(aes(x=Year, y=KY, linetype=Country))
sri_lanka_plt = zarazaga_plot_data %>%
filter(Country == 'LAK') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))
pakistan_plt = zarazaga_plot_data %>%
filter(Country == 'PAK') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))
sri_lanka_plt
library(tidyverse)
sri_lanka_plt = zarazaga_plot_data %>%
filter(Country == 'LKA') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))
pakistan_plt = zarazaga_plot_data %>%
filter(Country == 'PAK') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))
sri_lanka_plt
setwd("/Users/abc/Desktop/論文3/Thesis/fig")
library(readr)
zarazaga_plot_data <- read_csv("~/Desktop/論文3/DATA/Zarazaga/zarazaga_plot_data.csv")
View(zarazaga_plot_data)
library(tidyverse)
sri_lanka_plt = zarazaga_plot_data %>%
filter(Country == 'LKA') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))+
ylab("Capital-output ratio") +
xlab("Year") +
theme_bw()+
theme(text = element_text(size = 10, family = "serif"))+
theme(legend.position="bottom",
legend.margin = margin(t = -0.5, unit = "cm")) +
pakistan_plt = zarazaga_plot_data %>%
filter(Country == 'PAK') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))+
ylab("Capital-output ratio") +
xlab("Year") +
theme_bw()+
theme(text = element_text(size = 10, family = "serif"))+
theme(legend.position="bottom",
legend.margin = margin(t = -0.5, unit = "cm")) +
sri_lanka_plt = zarazaga_plot_data %>%
filter(Country == 'LKA') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))+
ylab("Capital-output ratio") +
xlab("Year") +
theme_bw()+
theme(text = element_text(size = 10, family = "serif"))+
theme(legend.position="bottom",
legend.margin = margin(t = -0.5, unit = "cm"))
pakistan_plt = zarazaga_plot_data %>%
filter(Country == 'PAK') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))+
ylab("Capital-output ratio") +
xlab("Year") +
theme_bw()+
theme(text = element_text(size = 10, family = "serif"))+
theme(legend.position="bottom",
legend.margin = margin(t = -0.5, unit = "cm"))
sri_lanka_plt
sri_lanka_plt = zarazaga_plot_data %>%
filter(Country == 'LKA') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))+
ylab("Capital-output ratio") +
xlab("Year") +
theme_bw()+
theme(text = element_text(size = 10, family = "serif"))+
theme(legend.position="bottom",
legend.margin = margin(t = -0.5, unit = "cm"))
sri_lanka_plt
sri_lanka_plt = zarazaga_plot_data %>%
filter(Country == 'LKA') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))+
geom_vline(c(2005, 2012, 2017)) +
ylab("Capital-output ratio") +
xlab("Year") +
theme_bw()+
theme(text = element_text(size = 10, family = "serif"))+
theme(legend.position="bottom",
legend.margin = margin(t = -0.5, unit = "cm"))
pakistan_plt = zarazaga_plot_data %>%
filter(Country == 'PAK') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))+
geom_vline(1999) +
ylab("Capital-output ratio") +
xlab("Year") +
theme_bw()+
theme(text = element_text(size = 10, family = "serif")) +
theme(legend.position="bottom",
legend.margin = margin(t = -0.5, unit = "cm"))
sri_lanka_plt = zarazaga_plot_data %>%
filter(Country == 'LKA') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))+
geom_vline(xintercept=c(2005, 2012, 2017)) +
ylab("Capital-output ratio") +
xlab("Year") +
theme_bw()+
theme(text = element_text(size = 10, family = "serif"))+
theme(legend.position="bottom",
legend.margin = margin(t = -0.5, unit = "cm"))
pakistan_plt = zarazaga_plot_data %>%
filter(Country == 'PAK') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))+
geom_vline(xintercept= 1999) +
ylab("Capital-output ratio") +
xlab("Year") +
theme_bw()+
theme(text = element_text(size = 10, family = "serif")) +
theme(legend.position="bottom",
legend.margin = margin(t = -0.5, unit = "cm"))
sri_lanka_plt
sri_lanka_plt = zarazaga_plot_data %>%
filter(Country == 'LKA') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))+
geom_vline(xintercept=c(2005, 2012, 2017), linetype="dash") +
ylab("Capital-output ratio") +
xlab("Year") +
theme_bw()+
theme(text = element_text(size = 10, family = "serif"))+
theme(legend.position="bottom",
legend.margin = margin(t = -0.5, unit = "cm"))
sri_lanka_plt
sri_lanka_plt = zarazaga_plot_data %>%
filter(Country == 'LKA') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))+
geom_vline(xintercept=c(2005, 2012, 2017), linetype="dashed") +
ylab("Capital-output ratio") +
xlab("Year") +
theme_bw()+
theme(text = element_text(size = 10, family = "serif"))+
theme(legend.position="bottom",
legend.margin = margin(t = -0.5, unit = "cm"))
sri_lanka_plt
pakistan_plt = zarazaga_plot_data %>%
filter(Country == 'PAK') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))+
geom_vline(xintercept= 1999) +
ylab("Capital-output ratio") +
xlab("Year") +
theme_bw()+
theme(text = element_text(size = 10, family = "serif")) +
theme(legend.position="bottom",
legend.margin = margin(t = -0.5, unit = "cm"))
pakistan_plt
pakistan_plt = zarazaga_plot_data %>%
filter(Country == 'PAK') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))+
geom_vline(xintercept= 1999, linetype="dashed") +
ylab("Capital-output ratio") +
xlab("Year") +
theme_bw()+
theme(text = element_text(size = 10, family = "serif")) +
theme(legend.position="bottom",
legend.margin = margin(t = -0.5, unit = "cm"))
pakistan_plt
((1.9/1.45)^(2/3) - 1 )*100
((1.9/1.45)^(2/3) - 1 )*100/2
((1.43/1.34)^(3/2) - 1 )*100/2
((1.434/1.347)^(3/2) - 1 )*100/2
((1.434/1.347)^(3/2) - 1 )*100
sri_lanka_plt = zarazaga_plot_data %>%
filter(Country == 'LKA') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))+
geom_vline(xintercept=c(2005, 2012, 2017), linetype="dashed") +
ylab("Capital-output ratio") +
xlab("Year") +
theme_bw()+
theme(text = element_text(size = 10, family = "serif"))+
theme(legend.position="bottom",
legend.margin = margin(t = -0.5, unit = "cm"))
pakistan_plt = zarazaga_plot_data %>%
filter(Country == 'PAK') %>%
ggplot() +
geom_line(aes(x=Year, y=KY))+
geom_vline(xintercept= 1999, linetype="dashed") +
ylab("Capital-output ratio") +
xlab("Year") +
theme_bw()+
theme(text = element_text(size = 10, family = "serif")) +
theme(legend.position="bottom",
legend.margin = margin(t = -0.5, unit = "cm"))
sri_lanka_plt
pakistan_plt
ggsave('sri_lanka_output_loss.eps', sri_lanka_plt, width = 4, height = 3)
ggsave('pakistan_output_loss.eps', pakistan_plt, width = 4, height = 3)
ggsave('sri_lanka_output_loss.pdf', sri_lanka_plt, width = 4, height = 3)
ggsave('pakistan_output_loss.pdf', pakistan_plt, width = 4, height = 3)
